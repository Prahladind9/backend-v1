CodeWithMosh
0) Basics
1) Classes
    Class, Object
    Storage :   Heap, Stack
    Concepts:   Procedural Programming, Encapsulation, Abstraction
                Coupling, MethodOverloading, Static Members

2) Inheritance - IS-A Relation
    Polymorphism: Many-forms
        Constructors
        Access Modifiers
        Object: gives the below method
            getClass,
            equals; comparing objects with values stored in their fields
            hashCode; of the address of the object, stored in the memory
            toString; fully qualified class@hexadecimal of hashcode
            concurrency; notify, notifyAll, wait

        Method Overriding
        Up-casting  :   Casting an object to one of its "super" types
        Down-casting:   Casting an object to one of its "sub" types
                        Handle ClassCastException

        Comparing Objects
        abstract, final
        Deep Inheritance hierarchies are not recommended > max 3 levels
        Multiple Inheritance is not supported
       YAGNI - You aren't gonna need it

3) Interfaces
    We use interface to build loosely-coupled, extensible, testable applications.
    Abstraction: Hide the implementation details
    Programming against interfaces - loosely couple classes

    Interface says: "What" should be done
                Ex:  Data compression, Encryption, Sorting, Searching, contract

    Classes impl  : "How" it should be done
    DependencyInjection: Our Classes shouldn't instantiate their dependencies
       Constructor Inj : We can inject dependency of class, during object creation (more preferred)
       Setter Injection: We can the inject dependency of class, throughout the lifetime
       Method Injection: Only applicable when we use the method, can be